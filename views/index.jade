extends layout
block content
  head
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(href="bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen")
    link(href="stylesheets/style.css" rel="stylesheet")
    script(src='jquery/jquery-1.11.1.js')
    script(src='jsapi/jsapi.js')
    script(src="bootstrap/js/bootstrap.min.js")
    script(src='socketio/socket.io-1.2.0.js')
    script.
      google.load('visualization', '1.0', {'packages':['corechart']});
    script.
      var socket = io();
      
      socket.on('update total laps', function(data) {
      
        $('.totalLaps').text(data);
      
      });
      
      socket.on('update ranking by lap', function(data) {
        
        // Clear out table.
        $('.lapRankingsTable').empty();
        
        // Create header.
        var header = $(document.createElement('tr'));
        header.append($(document.createElement('th')).text('Place'));
        header.append($(document.createElement('th')).text('Team Name'));
        header.append($(document.createElement('th')).text('Laps'));
        $('.lapRankingsTable').append(header);

        data.forEach(
          function(currentValue, index) { // teams.name, teams.color, teams.textcolor, COUNT(fact.uid)
                        
            /*var container = $(document.createElement('div'))
              .addClass('teamNameContainer')
              .css('color',currentValue[2])
              .css('background-color',currentValue[1]);
            var teamName = $(document.createElement('div'))
              .addClass('teamName')
              .text(currentValue[0]);
            var numLaps = $(document.createElement('div'))
              .addClass('numLaps')
              .text(currentValue[3]);*/
              
            var tableRow = $(document.createElement('tr'))
              .css('color',currentValue[2])
              .css('background-color',currentValue[1]);
            var place = $(document.createElement('td'))
              .text(index+1);
            var teamName = $(document.createElement('td'))
              .text(currentValue[0]);
            var numLaps = $(document.createElement('td'))
              .text(currentValue[3]);
            
            
            tableRow.append(place);
            tableRow.append(teamName);
            tableRow.append(numLaps);
          
            $('.lapRankingsTable').append(tableRow);
          }
        );

      });
      
      socket.on('update lowest lap time', function(data) {
         $('.lowestLapTime').text("Lowest lap time: " + data[0][3] + " from team " + data[0][0]);
      });
      
      socket.on('update lowest average lap time', function(data) {
      console.dir(data);
         $('.lowestAverageLapTime').text("Lowest average lap time: " + data[0][3] + " from team " + data[0][0]);
      });
      
      socket.on('update main table', function(data) {
      
        // Clear out table.
        $('.mainTable').empty();
        
        // Create header.
        var header = $(document.createElement('tr'));
        header.append($(document.createElement('th')).text('Place'));
        header.append($(document.createElement('th')).text('Team Name'));
        header.append($(document.createElement('th')).text('Number of Laps'));
        header.append($(document.createElement('th')).text('Minimum Lap Time'));
        $('.mainTable').append(header);

        data.forEach(
          function(currentValue, index) { // teams.name, teams.color, teams.textcolor, numLaps, minimumLapTime
                       
            var tableRow = $(document.createElement('tr'))
              .css('color',currentValue[2])
              .css('background-color',currentValue[1]);
            var place = $(document.createElement('td'))
              .text(index+1);
            var teamName = $(document.createElement('td'))
              .text(currentValue[0]);
            var numLaps = $(document.createElement('td'))
              .text(currentValue[3]);
            var minimumLapTime = $(document.createElement('td'))
              .text(currentValue[4]);
            
            
            tableRow.append(place);
            tableRow.append(teamName);
            tableRow.append(numLaps);
            tableRow.append(minimumLapTime);
          
            $('.mainTable').append(tableRow);
          }
        );

      });
      
      socket.on('update latest landmark', function(data) {
        $('.latestLandmark').text("Latest landmark: " + data[0]);
      });
      
      socket.on('update next landmark', function(data) {
        $('.nextLandmark').text("Next landmark: " + data[0] + " in " + Math.round(data[2]) + " miles!");
      });
      
      socket.on('update team milestone', function(data) {
        $('.teamMilestones').text("Latest team milestone: " + data.milestoneName + " from " + data.teamName);
      });

      function startTime() {
        
        var endDate = new Date("Sat Jul 25 2015 23:00:00 GMT-0400 (Eastern Daylight Time)");
        var today=new Date();
        
        var h, m, s;
        
        // Local time
        h=today.getHours();
        if (h > 12) h -= 12;
        m=today.getMinutes();
        s=today.getSeconds();
        m = checkTime(m);
        s = checkTime(s);
        $('.time').text(h+":"+m+":"+s);
        
        // Time remaining
        var timeRemaining = endDate.getTime() - today.getTime();
        h = Math.round(timeRemaining / (1000 * 60 * 60));
        timeRemaining = timeRemaining % (1000 * 60 * 60); // only minutes remain...
        m = Math.round(timeRemaining / (1000 * 60));
        timeRemaining = timeRemaining % (1000 * 60); // only seconds remain...
        s = Math.round(timeRemaining / 1000);
        m = checkTime(m);
        s = checkTime(s);
        $('.timeRemaining').text(h+":"+m+":"+s);
        
        // Refresh in 0.5 seconds
        var t = setTimeout(function(){startTime()},500);
      }

      function checkTime(i) {
        if (i<10) {i = "0" + i};  // add zero in front of numbers < 10
        return i;
      }
      
      $(document).ready(function(){
      
        socket.emit('request refresh'); // When the doc is ready, request a refresh.

        // Start time
        startTime();
      });
      
  body
    div.container-fluid.container
      div.row-fluid.top
        div.time
        div.totalLaps
        div.timeRemaining
      div.row-fluid.middle
        div.left
          div.landmarksContainer
            div.latestLandmark
            div.nextLandmark
          div.lapTimeRecordsContainer
            div.lowestLapTime
            div.lowestAverageLapTime
        div.mainTableContainer
          table.table.mainTable
        div.right
          div.teamMilestonesContainer
            div.teamMilestones
          div.logoContainer
      div.row-fluid.bottom